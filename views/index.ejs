<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mekoski Wine Tasting Event</title>

    <style>
        body {
            background-color: #e3cdab;
            margin: 0;
            padding: 0;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
            /* background-image: url('images/winetasting.png');
            backdrop-filter: blur(11px); */
        }
        .header {
            text-align: center;
            position: sticky;
            top: 0;
            left: 0;
            right: 0;
            background-color: #81376a;
            color:tan;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 10px 20px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            z-index: 1000;
        }
        .header h1 {
            padding-left: 20px;
            padding-right: 20px;
            margin: 0;
        }
        .button {
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 10px;
            box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
            padding: 10px 20px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            font-size: 16px;
            font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;
        }
        .button:hover {
            background-color: #45a049;
        }
        .content {
            margin-top: 20px; /* To avoid content being hidden behind the header */
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        /* Modal Styles */
        .modal {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 9999; /* Sit on top */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgba(0, 0, 0, 0.7); /* Dark overlay */
}

.modal-content {
    text-align: center;
    background-color: #ffffff;
    padding: 20px;
    border-radius: 8px; /* Rounded corners */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow effect */
    width: 90%; /* Responsive width */
    max-width: 500px; /* Maximum width */
    max-height: 80vh; /* Maximum height of modal content */
    overflow-y: auto; /* Enable vertical scrolling */
    position: absolute; /* Changed to absolute positioning */
    top: 50%; /* Center vertically */
    left: 50%; /* Center horizontally */
    transform: translate(-50%, -50%); /* Adjust position to be centered */
    animation: fadeIn 0.3s; /* Fade-in animation */
}

/* Close button */
.close {
    color: #888;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #d9534f; /* Red color on hover */
    text-decoration: none;
    cursor: pointer;
}

/* Title Styles */
.modal-content h2 {
    color: #333;
    margin: 0;
}

/* Paragraph Styles */
.modal-content p {
    color: #555;
    margin: 10px 0;
}

/* Animation */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

#ticket_message {
    background: #e5e5e5;
    padding: 6px;
    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
            border-radius: 10px; 
    font-size: larger;
    /* border: 3px solid red; */
    /* animation: bordeRed .5s infinite; */
}

@keyframes bordeRed {
    50% {border-color:#f5916b ;}
}

#tickets{
    font-weight: bold;
    color:red;
    animation: tickLeft .5s infinite;
}

@keyframes tickLeft {
    50% {color:#f5916b ; font-weight:bolder;}
}

.highlight {
    border-radius: 5px;
    outline-offset: 5px;
    outline: 3px solid transparent; 
    
    animation: rwb 1.5s forwards, fadeToTransparent 1s 1.5s forwards; /* Chain animations */
}

@keyframes rwb {
    0% {
        outline-color: transparent; /* Start with transparent */
    }
    25% {
        outline-color: red; /* Change to red */
    }
    50% {
        outline-color: white; /* Change to white */
    }
    75% {
        outline-color: white; /* Hold white longer */
    }
    100% {
        outline-color: blue; /* Change to blue */
    }
}

@keyframes fadeToTransparent {
    0% {
        outline-color: blue; /* Start from blue */
    }
    100% {
        outline-color: transparent; /* Fade to transparent */
    }
}

</style>

</head>
<body>
    <div class="header">
        <button class="button" onclick="openModal()">Contact Us</button>
        <h1>Mekoski Fundraiser</h1>
        <button class="button" onclick="focusOn('ticket-form');">Purchase Tickets</button>
    </div>
    
    <!-- Modal for Contact Us -->
    <div id="contactModal" class="modal">
        <div class="modal-content">
            <span  tabindex="0"  class="close" onclick="closeModal()">&times;</span>
            <h2>Contact Us</h2>
            <p>Email: <a href="mailto:hgn.shelly@yahoo.com?subject=Terry Mekoski Wine Fundraiser">hgn.shelly@yahoo.com</a></p>
        </div>
    </div>

    <div class="content">
        <img src="images/winetasting.png" style="
            box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;
            border-radius: 10px; 
            display: block; 
            margin-left: auto; 
            margin-right: auto; 
            max-height: 98vh;
            max-width: 98vw;" alt="Wine Tasting">
        
        <p id='ticket_message'>
            There are only <span id="tickets"></span> tickets left!
        </p>
    
        <form id="ticket-form"
        style="padding-bottom: 10px;">
            <label for="ticket-count">How many Tickets:</label>
            <input type="number" id="ticket-count" name="ticket-count" min="1" max="1" required style="width: 40px;" value="1">
            <div  tabindex="0" id="bbutt" class="button" style='margin-top: 15px;' onclick="openppModal()">Buy</div>
        </form>
        <br>
        <div id="pp" class="modal">
            <div class="modal-content">
                <span  tabindex="0"  class="close" onclick="closeModal()">&times;</span>
                
                <!-- First Page -->
                <div id="first-page">
                    <h2>Ticket Amount: <span id="pTix"> </span></h2>
                    <h3>Total Cost: $<span id='cost'></span></h3>
                    <form id="attendee-form">
                        <!-- Attendee inputs will be dynamically generated here -->
                    </form>
                    <button  class="button" type="button" onclick="showPaymentPage()">Purchase</button>
                </div>
        
                <!-- Second Page -->
                <div id="second-page" style="display: none;">
                    <button  class="button" onclick="showFirstPage()">Back</button>
                    <h2>Ticket Amount: <span id="pTix2"> </span></h2>
                    <h3>Total Cost: $<span id='cost2'></span></h3>
                    <p>Pay Using:</p>
                    <div id="paypal-button-container">
                        <!-- PayPal Button Here -->
                    </div>
                    <p id="result-message"></p>
                </div>
            </div>
        </div>
        
    </div>
    
    
<script>
    const tickets=document.getElementById('tickets');
    const ticket_message=document.getElementById('ticket_message');
    const ticket_count=document.getElementById('ticket-count')
    let current_ticket_count=0; let lastId

    document.getElementById('bbutt').addEventListener('keyup', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
            this.click(); // Trigger the click event
        }
    });

    let x = document.querySelectorAll('.close');

    // Add keyup event listener to each button
    x.forEach(button => {
        button.addEventListener('keyup', function(e) {
            if (e.key === 'Enter' || e.key === ' ') {
                this.click(); // Trigger the click event
            }
        });
    });

    // Listen for input changes
    ticket_count.addEventListener('input', function() {
        const value = parseInt(ticket_count.value);

        // Check if the value is greater than the max
        if (value > parseInt(ticket_count.max)) {
            ticket_count.value = ticket_count.max; // Set to max
        }
        
        // Check if the value is less than the min
        else if (value < parseInt(ticket_count.min)) {
            ticket_count.value = ticket_count.min; // Set to min
        }
    });
    ticket_count.addEventListener('keydown', function(event) {
    if (event.key === 'Enter') {
        event.preventDefault(); // Prevent form submission
    }
});

    loadtickets()

    async function loadtickets() {
    //   reloadCredits.classList.remove('rotated')
    //   void reloadCredits.offsetWidth; 
    //   reloadCredits.classList.add('rotated')
        tickets.innerText="..."
        const response = await fetch(location.origin+"/tickets");
        console.log(response)
        const res = await response.json().catch((error) => {
            console.error(error);
        });
        console.log(res)
        if (res !==undefined) {
            const ticket_amount=28-res
            if( ticket_amount < 2 ){
                if (ticket_amount==1){ticket_message.innerText='There is only 1 ticket left!'}
                else {ticket_message.innerText='Sorry, there are no tickets left!'}
            }
            else {
                tickets.innerText=ticket_amount.toString()
                ticket_count.max=Math.min(ticket_amount,ticket_amount)//max amount of tickets at a time??
            }
      }
    //   else {
    //     credits="N/A"; 
    //   }
    }

    function focusOn(targetId){
        if (lastId==targetId){return}
        lastId=targetId
        const targetElement = document.getElementById(targetId);
    
        // Add highlight class
        targetElement.classList.add('highlight');
        
        // Smooth scroll to the target element
        smoothScroll(targetId);
        
        // Remove highlight class after a short delay
        setTimeout(() => {
            targetElement.classList.remove('highlight');
            lastId=null
        }, 2500); // Highlight lasts for 2 seconds
    }

    function smoothScroll(targetId) {
            const targetElement = document.getElementById(targetId);
            targetElement.scrollIntoView({ behavior: 'smooth' });
        }

    function openModal() {
        document.getElementById("contactModal").style.display = "block";
    }

    function openppModal() {
        const ticketCount = document.getElementById('ticket-count').value;
        document.getElementById('pTix').textContent = ticketCount.toString();
        document.getElementById('cost').textContent = (ticketCount * 42).toString();
        document.getElementById('pTix2').textContent = ticketCount.toString();
        document.getElementById('cost2').textContent = (ticketCount * 42).toString();
        document.getElementById("pp").style.display = "block";
        if (current_ticket_count.toString()==ticketCount){current_ticket_count=ticketCount; return}
        current_ticket_count=ticketCount
        // Clear existing attendee fields
        const attendeeForm = document.getElementById('attendee-form');
        attendeeForm.innerHTML = ''; // Clear previous inputs

        // Create inputs for attendees
        for (let i = 1; i <= ticketCount; i++) {
            const label = document.createElement('label');
            label.setAttribute('for', `attendee-name${i}`);
            label.textContent = `Attendee ${i} Name:`;
            
            const input = document.createElement('input');
            input.setAttribute('type', 'text');
            input.setAttribute('id', `attendee-name${i}`);
            input.setAttribute('name', `attendee-name${i}`);
            input.setAttribute('required', true);

//             input.addEventListener('focus', () => {
//     input.scrollIntoView({ behavior: 'smooth', block:"center" });
// });

            attendeeForm.appendChild(label);
            attendeeForm.appendChild(input);
            attendeeForm.appendChild(document.createElement('br'));
            attendeeForm.appendChild(document.createElement('br')); // Extra space
        }

        // Add phone number field
        const phoneLabel = document.createElement('label');
        phoneLabel.setAttribute('for', 'phone-number');
        phoneLabel.textContent = 'Phone Number:';
        
        const phoneInput = document.createElement('input');
        phoneInput.setAttribute('type', 'tel');
        phoneInput.setAttribute('id', 'phone-number');
        phoneInput.setAttribute('name', 'phone-number');
        phoneInput.setAttribute('required', true);

        attendeeForm.appendChild(phoneLabel);
        attendeeForm.appendChild(phoneInput);
        attendeeForm.appendChild(document.createElement('br'));
        attendeeForm.appendChild(document.createElement('br')); // Extra space

        // Add email field
        const emailLabel = document.createElement('label');
        emailLabel.setAttribute('for', 'email');
        emailLabel.textContent = 'Email Address:';
        
        const emailInput = document.createElement('input');
        emailInput.setAttribute('type', 'email');
        emailInput.setAttribute('id', 'email');
        emailInput.setAttribute('name', 'email');
        emailInput.setAttribute('required', true);

        attendeeForm.appendChild(emailLabel);
        attendeeForm.appendChild(emailInput);
        attendeeForm.appendChild(document.createElement('br'));
        attendeeForm.appendChild(document.createElement('br')); // Extra space

        // Show the modal and reset to the first page
        document.getElementById('first-page').style.display = 'block';
        document.getElementById('second-page').style.display = 'none';
    }

    function closeModal() {
        console.log('closemodals')
        document.getElementById("contactModal").style.display = "none";
        document.getElementById("pp").style.display = "none";
        // document.getElementById('paypal-button-container').style.height='0px'
    }

    // Update the Contact Us button to call openModal()
    document.querySelector('.header .button').onclick = openModal;

    // Close modal when clicking outside of it
    window.onclick = function(event) {
        const modal = document.getElementById("contactModal");
        const ppmodal= document.getElementById("pp");
        if (event.target === modal || event.target === pp) {
            closeModal();
        }
    }

    function showPaypalButton(event) {
        event.preventDefault(); // Prevent form submission
        console.log("HELLOWWW")
        const paypalContainer = document.getElementById('paypal-button-container');
        const pp=document.getElementById('pp');

        // Set the container height to the measured height
        paypalContainer.style.height = paypalContainer.firstElementChild.offsetHeight.toString()+"px";
        pp.style.minHeight=paypalContainer.firstElementChild.offsetHeight.toString()+"px";
        // Scroll to the paypal container
        pp.scrollIntoView({ behavior: 'smooth', block: 'start' });

        // Optionally, render PayPal buttons here if you're using a PayPal SDK
        // Example: paypal.Buttons().render('#paypal-button-container');

    }


    function showPaymentPage() {
        document.getElementById('first-page').style.display = 'none';
        document.getElementById('second-page').style.display = 'block';
    }

    function showFirstPage() {
        document.getElementById('second-page').style.display = 'none';
        document.getElementById('first-page').style.display = 'block';
    }

</script>
<script src="<%= prod ? 'https://www.paypal.com/sdk/js?client-id=AQ2ASsDCEeLFOyZmHOl11WghAlGbOYXO7XHg0-z_bpEAozuFUmfkLKnREzTI_oqSNdO6YezcsiIFKNVt&currency=USD' : 'https://www.paypal.com/sdk/js?client-id=test&currency=USD' %>"></script>
<script src="../pp.js"></script>
</body>
</html>